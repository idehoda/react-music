[{"/Users/idehoda/Desktop/react-playground/react-music/src/App.js":"1","/Users/idehoda/Desktop/react-playground/react-music/src/components/AddSong.js":"2","/Users/idehoda/Desktop/react-playground/react-music/src/components/SongPlayer.js":"3","/Users/idehoda/Desktop/react-playground/react-music/src/components/Header.js":"4","/Users/idehoda/Desktop/react-playground/react-music/src/components/SongList.js":"5","/Users/idehoda/Desktop/react-playground/react-music/src/index.js":"6","/Users/idehoda/Desktop/react-playground/react-music/src/components/QueuedSongList.js":"7","/Users/idehoda/Desktop/react-playground/react-music/src/theme.js":"8","/Users/idehoda/Desktop/react-playground/react-music/src/graphql/client.js":"9","/Users/idehoda/Desktop/react-playground/react-music/src/graphql/queries.js":"10"},{"size":1359,"mtime":1606607859790,"results":"11","hashOfConfig":"12"},{"size":6277,"mtime":1606689702455,"results":"13","hashOfConfig":"12"},{"size":2472,"mtime":1606656113375,"results":"14","hashOfConfig":"12"},{"size":650,"mtime":1606249212612,"results":"15","hashOfConfig":"12"},{"size":2406,"mtime":1606690351474,"results":"16","hashOfConfig":"12"},{"size":511,"mtime":1606683203967,"results":"17","hashOfConfig":"12"},{"size":2035,"mtime":1606521640151,"results":"18","hashOfConfig":"12"},{"size":250,"mtime":1606249212613,"results":"19","hashOfConfig":"12"},{"size":371,"mtime":1606690214729,"results":"20","hashOfConfig":"12"},{"size":235,"mtime":1606682080986,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"igwb9p",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/idehoda/Desktop/react-playground/react-music/src/App.js",[],["46","47"],"/Users/idehoda/Desktop/react-playground/react-music/src/components/AddSong.js",["48"],"import React from 'react';\nimport { \n    TextField, InputAdornment, Button, Dialog, DialogTitle, DialogContent, DialogActions, makeStyles\n} from '@material-ui/core';\nimport { Link, AddBoxOutlined } from '@material-ui/icons';\nimport ReactPlayer from 'react-player';\nimport SoundcloudPlayer from 'react-player/lib/players/SoundCloud'\nimport YouTubePlayer from 'react-player/lib/players/YouTube'\nimport { ADD_SONG } from '../graphql/mutations';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    urlInput: {\n        margin: theme.spacing(1)\n    },\n    addSongButton: {\n        margin: theme.spacing(1)\n    },\n    dialog: {\n        textAlign: 'center'\n    },\n    thumbnail: {\n        width: '90%'\n    }\n}))\n\nconst defaultSongState = {\n    duration: 0,\n    title: '',\n    artist: '',\n    thumbnail: ''\n}\n\nfunction AddSong() {\n    const classes = useStyles();\n    const [ addSong, { error } ] = useMutation(ADD_SONG);\n    const [ dialog, setDialog ] =  React.useState(false);\n    const [ playable, setPlayable ] =  React.useState(false);\n    const [ url, setUrl ] = React.useState('');\n    const [ song, setSong ] = React.useState(defaultSongState);\n\n    React.useEffect(() => {\n        const isPlayable = SoundcloudPlayer.canPlay(url) || YouTubePlayer.canPlay(url);\n        setPlayable(isPlayable);\n    }, [url])\n    \n    function handleCloseDialog() {\n        setDialog(false)\n    }\n    function handleChangeSong(e) {\n        const { name, value } = e.target;\n        setSong(prevSong => ({\n            ...prevSong,\n            [name]: value\n        }))\n    }\n    async function handleAddSong() {\n        const { url, thumbnail, duration, title, artist } = song;\n        try {\n            await addSong({ \n                variables: {\n                    url: url.length > 0 ? url : null,\n                    thumbnail: thumbnail.length > 0 ? thumbnail : null,\n                    title: title.length > 0 ? title : null,\n                    artist: artist.length > 0 ? artist : null,\n                    duration: duration > 0 ? duration : null\n                }\n            })\n            handleCloseDialog();\n            setSong(defaultSongState);\n            setUrl('');\n        } catch (error) {\n            console.error('error adding song :(')  \n        }\n    }\n    async function handleEditSong({ player }) {\n        const nestedPlayer = player.player.player;\n        let songData;\n        if (nestedPlayer.getVideoData) {\n            songData = getYoutubeInfo(nestedPlayer);\n        } else if (nestedPlayer.getCurrentSound){\n            songData = await getSoundCloudInfo(nestedPlayer);\n        }\n        setSong({...songData, url});\n    }\n    function handleError(field) {\n        return error?.graphQLErrors[0]?.extensions?.path.includes(field);\n    }\n    function getYoutubeInfo(player) {\n        const duration = player.getDuration();\n        const { title, video_id, author } = player.getVideoData();\n        const thumbnail = `https://img.youtube.com/vi/${video_id}/0.jpg`;\n        return {\n            duration,\n            title,\n            artist: author,\n            thumbnail\n        }\n    }\n    function getSoundCloudInfo(player) {\n        return new Promise(resolve => {\n            player.getCurrentSound( songData => {\n                if (songData) {\n                    resolve({\n                        duration: Number(songData.duration / 1000),\n                        title: songData.title,\n                        artist: songData.user.username,\n                        thumbnail: songData.artwork_url.replace('-large', '-t500x500')\n                    })\n                }\n            })\n        })\n    }\n    const { thumbnail, artist, title } = song;\n\n    return (\n        <div className={classes.container}>\n            <Dialog \n                className={classes.dialog}\n                open={dialog}\n                onClose={handleCloseDialog}\n            >\n                <DialogTitle> Edit song </DialogTitle>\n                <DialogContent> \n                    <img \n                        className={classes.thumbnail} \n                        src={thumbnail}\n                        alt=\"song thumbnail\"\n                    />\n                    <TextField error={handleError('title')} helperText={handleError('title') && 'Fill out tltle'} onChange={handleChangeSong} value={title} margin='dense' name='title' label='Title' fullWidth />\n                    <TextField error={handleError('artist')} helperText={handleError('artist') && 'Fill out artist'} onChange={handleChangeSong} value={artist} margin='dense' name='artist' label='Artist' fullWidth />\n                    <TextField error={handleError('thumbnail')} helperText={handleError('thumbnail') && 'Fill out thumbnail'} onChange={handleChangeSong} value={thumbnail} margin='dense' name='thumbnail' label='Thumbnail' fullWidth />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCloseDialog} color='secondary'>Cancel</Button>\n                    <Button onClick={handleAddSong} variant='outlined' color='primary'>Add song</Button>\n                </DialogActions>\n            </Dialog>\n            <TextField\n                onChange={e => setUrl(e.target.value)}\n                value={url}\n                className={classes.urlInput}\n                placeholder=\"Add youtube or soundCLoud url\"\n                fullWidth\n                margin=\"normal\"\n                type=\"url\"\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position='start'>\n                            <Link />\n                        </InputAdornment> \n                    )\n                }}\n            />\n            <Button\n                disabled={!playable}\n                className={classes.addSongButton}\n                onClick={() => setDialog(true)}\n                variant='contained'\n                color='primary'\n                endIcon={<AddBoxOutlined />}\n            >\n                Add\n            </Button>\n            <ReactPlayer url={url} hidden onReady={handleEditSong}/>\n        </div>\n    )\n}\n\nexport default AddSong;","/Users/idehoda/Desktop/react-playground/react-music/src/components/SongPlayer.js",["49"],"import React from 'react';\nimport QueuedSongList  from './QueuedSongList';\n\nimport { Card, CardMedia, CardContent, Typography, IconButton, Slider, makeStyles } from '@material-ui/core';\nimport { SkipNext, SkipPrevious, PlayArrow, Stop } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '0px 15px',\n    },\n    content: {\n        flex: '1 0 auto'\n    },\n    thumbnail: {\n        width: 150\n    },\n    controls: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1)\n    },\n    playIcon: {\n        height: 38,\n        width: 38\n    }\n}))\n\nfunction SongPlayer() {\n    const classes = useStyles();\n    return (\n        <>\n                <Card className={classes.container} variant='outlined'>\n                    <div className={classes.details}>\n                        <CardContent className={classes.content}> \n                            <Typography variant='h5' component='h3'>\n                                Title\n                            </Typography>\n                            <Typography variant='subtitle1' component='p' color='secondary'>\n                                Artist\n                            </Typography>\n                        </CardContent>\n                        <div className={classes.controls}>\n                            <IconButton>\n                                <SkipPrevious />\n                            </IconButton>\n                            <IconButton>\n                                <PlayArrow className={classes.playIcon}/>\n                            </IconButton>\n                            <IconButton>\n                                <SkipNext />\n                            </IconButton>\n                            <Typography variant='subtitle1' component='p' color='secondary'>\n                                00:01:30\n                            </Typography>\n                        </div>\n                        <Slider type='range' min={0} max={1} step={0.01} />\n                    </div>\n                    <CardMedia className={classes.thumbnail} image='https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg' />\n                </Card>\n            <QueuedSongList />\n        </>\n    )\n}\n\nexport default SongPlayer;",["50","51"],"/Users/idehoda/Desktop/react-playground/react-music/src/components/Header.js",[],"/Users/idehoda/Desktop/react-playground/react-music/src/components/SongList.js",[],"/Users/idehoda/Desktop/react-playground/react-music/src/index.js",[],"/Users/idehoda/Desktop/react-playground/react-music/src/components/QueuedSongList.js",[],"/Users/idehoda/Desktop/react-playground/react-music/src/theme.js",[],"/Users/idehoda/Desktop/react-playground/react-music/src/graphql/client.js",[],"/Users/idehoda/Desktop/react-playground/react-music/src/graphql/queries.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":10,"column":10,"nodeType":"58","messageId":"59","endLine":10,"endColumn":18},{"ruleId":"56","severity":1,"message":"60","line":5,"column":45,"nodeType":"58","messageId":"59","endLine":5,"endColumn":49},{"ruleId":"52","replacedBy":"61"},{"ruleId":"54","replacedBy":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'useQuery' is defined but never used.","Identifier","unusedVar","'Stop' is defined but never used.",["63"],["64"],"no-global-assign","no-unsafe-negation"]